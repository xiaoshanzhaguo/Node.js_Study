/*
    模块化
        - 在Node中，一个js文件就是一个模块
        - 在Node中，每一个js文件中的js代码都是独立运行在一个函数中
        （一定注意啊，你现在想象着，不要看它是在全局里，它实际外面包了一层函数，而下面的代码是在函数里去执行的，相当于这是个自调用的函数）
        而不是全局作用域。所以一个模块中的变量和函数在其他模块中无法访问（意味着每个模块和每个模块之间，都是一个闭包，它都是独立的，别的模块看不见我这个模块
        因此我们要将代码暴露出去
 */
// (function() {
//     console.log("我是一个模块，我是02.module.js");
//
//     var x = 10;
//     var y = 10;
// })()

console.log("我是一个模块，我是02.module.js");

// var x = 10;
// var y = 10;

/*
我们可以通过 exports 来向外部暴露变量和方法
    只需要将需要暴露给外部的变量或方法设置为exports的属性即可
    (exports本身的意思就是导出，你想把谁给外面看，就用exports)
    (但是有的同学觉得麻烦，为什么不能直接var x呢，因为在写js代码时，最好不要总是在全局里写东西，那样会污染全局的作用域、全局的作用区间)
    (这个方式就是防止污染全局的运行空间，不希望暴露，就直接写里面就可以了)
 */
//向外部暴露属性或方法

exports.x = "我是02.module.js中的x"
exports.y = "我是y"
exports.fn = function () {

}